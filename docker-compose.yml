version: "3"

services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dg01
    command: >
      bash -c "python manage.py collectstatic --no-input &&
      python manage.py makemigrations &&
      python manage.py migrate &&
      gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./backend:/app
      - static_volume:/app/static/
      - media_volume:/app/media/
    depends_on:
      - db
    ports:
      - "8000:8000"

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile.react
    container_name: react01
    environment:
      - REACT_APP_API_BASE_URL=http://web:8000
    volumes:
      - ./frontend/build:/usr/share/nginx/html  # React 빌드 파일을 Nginx 루트로 연결
    ports:
      - "3000:3000"

  nginx:
    image: nginx:1.17.10
    container_name: ng01
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/usr/share/nginx/html/static/
      - media_volume:/usr/share/nginx/html/media/
      - ./frontend/build:/usr/share/nginx/html/static  # React 빌드 파일을 Nginx 루트로 연결
      - ./backend/static:/usr/share/nginx/html/static  # React 빌드 파일을 Nginx 루트로 연결
      - certs:/etc/letsencrypt
      - certs-data:/data/letsencrypt
    depends_on:
      - web
      - react

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certs:/etc/letsencrypt
      - certs-data:/data/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"

  db:
    image: postgres:12.2
    container_name: ps01
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  certs-data:
